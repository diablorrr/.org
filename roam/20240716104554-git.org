:PROPERTIES:
:ID:       52880cac-b451-4efc-bf87-3edde817eb06
:END:
#+title: git
#+filetags: index

* git
1. git 是用于版本管理的工具，常见操作见 [[id:3eb41807-bf67-46de-a1d1-93fcb85e3038][git table]]；
2. git 有三个重要的区域：工作区（Working Directory）、暂存区（Index）、版本区（HEAD指向某个版本）；分离的HEAD 是指 HEAD 指向某个 commit 而不是某个分支的最后一次提交
3. git相关的配置文件见 [[id:87c46680-515a-4b58-b0f2-b606612a1554][git配置文件]]，可以查看用户名、密码、代理，忽略跟踪的文件，子模块的配置等
4. 我们可以通过设置 .gitignore 来忽略跟踪的文件，语法参见 [[id:b81be949-f943-4014-9279-8be45497efbb][.gitignore语法]]；若发现 .gitignore 不生效，查看 [[id:a8270354-11ea-4b5c-ae42-87170cd68368][.gitignore不生效解决方法]]；
5. 有时候我们会发现 git 很慢，这时候设置 [[id:54642b64-644b-4f5a-977f-572f75973445][git走代理]]、[[id:8158c722-f1e3-4838-adfa-dfacfdcd6af4][加速git clone的几种方法]]
6. 团队协作开发时，需要注意 [[id:dea94665-71ca-4e52-8b7d-919346648bc6][git branch规范]]、[[id:2eb9155c-17e3-4718-b254-70041a1966d1][git commit规范]]；
7. 可以使用 git diff 查看文件差异，查看 [[id:4e6206ae-df01-4811-8ffe-8c49689169b5][git diff信息详解]]；有时候觉得 commit 太乱，可以使用 [[id:56824225-cc55-48c5-80f7-f1ad0e482bc1][git rebase修改任意commit的提交信息]]；希望抛弃本地的 commit历史，使用远程仓库的，见 [[id:debf2c17-65b9-4c91-b1a6-aba928b39e34][git远程commit覆盖本地commit]]；误删除分支时，恢复方法见 [[id:9f6c2633-9c36-41ab-98eb-12ebf9ca1757][git恢复误删除的分支]]；对于有子模块的git项目，我们希望部分更新子模块，见 [[id:c25f42e9-0361-4966-a1b5-e0f18a4adf45][git submodule update更新部分子模块]]
8. 在 emacs 中，有个好用的git客户端 [[id:c492f05c-da8f-4eff-98a4-4b68f90e36fb][magit]]

