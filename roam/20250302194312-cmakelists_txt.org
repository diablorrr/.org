:PROPERTIES:
:ID:       183c9f25-d3a3-4a95-baa1-5e1a3b201a11
:END:
#+title: CMakeLists.txt
#+STARTUP show2levels

* 使用
:PROPERTIES:
:VISIBILITY: show2levels
:END:
** 设置cpp17标准智能感知
1. CMakeLists.txt编写如下
   #+begin_src cmake
   cmake_minimum_required(VERSION 3.10)
   project(MyProject CXX)

   set(CMAKE_CXX_STANDARD 17)  # 设置 C++17 标准
   set(CMAKE_CXX_STANDARD_REQUIRED ON)  # 强制使用 C++17，不允许降级
   set(CMAKE_CXX_EXTENSIONS OFF)  # 使用纯 C++17 标准，不使用编译器扩展
   set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

   add_executable(myapp main.cpp)
   target_compile_features(myapp PRIVATE cxx_std_17)  # 为 myapp 启用 C++17
   #+end_src
2. mkdir build && cd build
3. cmake ..
4. cmake --build .
** 常见问题:书写顺序
[[id:2e20f81d-56f0-4af5-a00c-b77fce675287][find_package()]]顺序问题：被依赖的放上头
eg：protobuf在grpc之前
** 没有[[id:c4819291-b93f-4864-b210-aa436634ac22][.cmake]]配置文件的package
- 做法 :: 我们会先包含库文件目录，将目录里我们需要的文件存到一个变量里，然后目标再去链接
- 示例 ::
#+begin_src cmake
include_directories(/usr/lib)
file(GLOB absl_libs "/usr/lib/libabsl_*.so")
target_link_libraries(main ${absl_libs})
#+end_src




* 查询
:PROPERTIES:
:VISIBILITY: show2levels
:END:
** 语法
| 指令                          | 作用                                            |
|-------------------------------+-------------------------------------------------|
| cmake_minimum_required        | 设置项目所需最低cmake版本                       |
| project                       | 定义 *项目名称* (可指定语言、版本)              |
| add_executable                | 生成 *可执行文件*                               |
| add_library                   | 创建库(*默认静态库*)                            |
| target_include_directories    | 为目标添加 *头文件搜索路径* (作用域控制)        |
| target_link_libraries         | 为目标 *链接库或目标* (作用域控制)              |
| [[id:2e20f81d-56f0-4af5-a00c-b77fce675287][find_package]]                  | 查找并加载外部依赖包                            |
| [[id:88ee430e-b4b8-4822-952b-95597384596f][pkg_check_modules]]             | 使用[[id:0867edf9-0f48-48ed-92be-e197f1546b05][pkg-config]]查找库                            |
| target_compile_options        | 指定 *编译选项* (如-Wall、-O3)                  |
| set                           | 定义 *变量、缓存变量*                           |
| [[id:add3a7d8-31e3-4c84-8103-d1c2c4be7dbd][message]]                       | *打印信息* (调试或状态信息)                     |
| add_subdirectory              | *添加子目录* ，执行其CMakeLists.txt以构建子项目 |
| [[id:e434d7b8-bf65-4876-bcbe-9c3116ff573a][file]]                          | *通配符匹配文件* (慎用，可能导致构建不更新)     |
| [[id:b15f4487-4bc6-4bd6-9432-474208e9b6b2][install]]                       | 安装(复制文件到指定目录)                        |
| [[id:24455af9-9c17-4ac2-a12d-710659b1b25c][add_custom_command]]            | 自定义构建命令(用于如：预处理或后处理)          |
| [[id:168fe76e-eaf9-44df-b0b8-a17935bd5f1b][ExternalProject_Add]]           | 构建外部项目(子项目)                            |
| [[id:989e79cb-35ef-402b-be97-ad3fd53d9054][set_target_properties]]         | 设置目标的属性                                  |
|-------------------------------+-------------------------------------------------|
| include                       | 包含其他CMake脚本文件，扩展功能                 |
| target_compile_definitions    | 为目标添加预处理器宏定义(如-DDEBUG)             |
| add_custom_target             | 创建自定义目标(如生成文档)，不依赖文件输出      |
| enable_testing() + add_test() | 启用测试并定义测试用例(需配合CTest使用)         |
| find_library/find_path        | 手动查找库或头文件路径                          |
| option                        | 创建用户可配置的选项(如-DOPTION_NAME=ON)        |
** 语法补充
*** <INTERFACE|PUBLIC|PRIVATE>关键字
- 作用 :: 控制对目标的可见性
  + PRIVATE :: 仅对当前目标可见，不会传递给链接到此目标的其他目标
  + PUBLIC :: 不仅对当前目标可见，还会传递给链接到此目标的其他目标
  + INTERFACE :: 对当前目标不可见，只会传递给链接到此目标的其他目标



** 预定义变量
| 预定义变量                  | 作用                             |
|-----------------------------+----------------------------------|
| CMAKE_CURRENT_SOURCE_DIR    | 当前CMakeLists.txt文件所在的目录 |
| CMAKE_CXX_STANDARD          | 设置cpp标准                      |
| CMAKE_CXX_STANDARD_REQUIRED | 强制编译器使用标准               |
|-----------------------------+----------------------------------|
| 参考链接                    | [[https://cmake.org/cmake/help/latest/manual/cmake-variables.7.html#variables-that-control-the-build][cmake-variables]]                  |





* 概念
- 简介 ::
  1. 是 [[id:c651b8b0-bc76-451d-acac-0ea55329f0e8][cmake]] 的配置文件
  2. 用于定义如何构建 c/[[id:8ab4df56-e11f-42b8-87f8-4daa2fd045db][cpp]] 项目
  3. [[id:c651b8b0-bc76-451d-acac-0ea55329f0e8][cmake]] 通过解析 CMakeLists.txt 生成 Makefile、Ninja 文件或 Visual Studio 项目，适配不同的构建系统
