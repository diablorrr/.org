:PROPERTIES:
:ID:       3aa872a4-290a-4fc8-8e37-add919e44822
:END:
#+title: g++(gnu cpp compiler)

* 使用
** TODO 制作[[id:f84e6893-cac7-4226-908e-8578bca59523][静态库]]并使用
1. g++ <源代码>.cpp -c -o lib<静态库名>.a
2. g++ <源代码>.cpp -o <可执行文件名> -L<静态库文件所在目录> -l<需要链接的库名>
*** 示例
#+begin_example
.
├── app
│   └── demo01.cpp
└── tools
    ├── libpublic.a
    ├── public.cpp
    └── public.h
#+end_example
1. 制作静态库：g++ ./tools/public.cpp -c -o libpublic.a
2. 使用静态库：g++ ./app/demo01.cpp -o app -L./tools -lpublic
** TODO 制作[[id:222168b4-b248-4dd4-8756-13199e8f6594][动态库]]并使用
1. g++ <源代码>.cpp -fPIC -shared -o lib<动态库名>.so
2. g++ <源代码>.cpp -o <可执行文件名> -L<静态库文件所在目录> -l<需要链接的库名>
3. 设置环境变量LD_LIBRARY_PATH：export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:<动态库目录>

* 查询
| 参数                 | 说明                         |
|----------------------+------------------------------|
| -o <output> <source> | 编译source => 文件output     |
| -O<level>[fn:1]      | 设置[[id:e4ad6ba8-9af3-4f94-8090-4dda2e676b38][编译器优化级别]]           |
| -L<dir>[fn:3]        | 库文件搜索路径               |
| -l<library>[fn:2]    | 链接指定的库                 |
| -I<dir>[fn:4]        | 头文件搜索路径               |
| -std=<standard>      | 指定语言标准                 |
| -g                   | 生成调试信息                 |
| -c                   | 只编译生成中间文件.o，不链接 |
| -v                   | 显示编译器版本、详细编译过程 |
| -w                   | 编译时，不显示任何警告信息   |
| -Wall                | 编译时，显示所有警告信息     |


* 概念
- 简介 ::
  1. g++ (GNU C++ Compiler)，用于编译[[id:8ab4df56-e11f-42b8-87f8-4daa2fd045db][cpp]]


* Footnotes
[fn:4] 搜索顺序：
        (1) <dir>
        (2) 系统搜索路径：/usr/include; /usr/local/include
[fn:3] 如果用户将库没有安装在系统搜索路径，则使用此选项
[fn:2] 系统搜索路径：
        (1) /lib
        (2) /usr/lib
        (3) /usr/local/lib
       优先链接动态库、其次静态库
[fn:1] -O0无优化，-O1、-O2、-O3优化级别递增。推荐优化选项O2
