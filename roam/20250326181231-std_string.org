:PROPERTIES:
:ID:       71086d36-a2b1-4797-b5f1-358f9c35c965
:END:
#+title: std::string


* 查询
| 方法                  | 时间复杂度   | 说明                                                               |
|-----------------------+--------------+--------------------------------------------------------------------|
| 构造与赋值            |              |                                                                    |
|-----------------------+--------------+--------------------------------------------------------------------|
| string()              | O(1)         | 构造空字符串（无动态分配）                                         |
| string(const char*)   | O(n)         | n为输入字符串长度（需拷贝）                                        |
| operator=             | O(n)         | n为赋值内容的长度（可能触发内存分配）                              |
| assign()              | O(n)         | n为赋值内容的长度                                                  |
|-----------------------+--------------+--------------------------------------------------------------------|
| 访问字符              |              |                                                                    |
|-----------------------+--------------+--------------------------------------------------------------------|
| operator[] / at()     | O(1)         | 直接访问（at()有边界检查，但时间相同）                             |
| front() / back()      | O(1)         | 直接访问首尾字符                                                   |
| c_str() / data()      | O(1)         | 返回内部指针（可能触发O(n)的'\0'追加，但现代实现通常已维护终止符） |
|-----------------------+--------------+--------------------------------------------------------------------|
| 修改操作              |              |                                                                    |
|-----------------------+--------------+--------------------------------------------------------------------|
| append() / operator+= | O(n)         | n为追加内容的长度（可能触发O(n)的内存重分配）                      |
| push_back()           | 均摊O(1)     | 可能触发O(n)的内存重分配（但均摊分析下为O(1)）                     |
| insert()              | O(n + k)     | n为原字符串长度，k为插入内容长度（可能需要移动后续字符）           |
| erase()               | O(n)         | n为原字符串长度（可能需要移动后续字符）                            |
| replace()             | O(n + k)     | n为原字符串长度，k为新内容长度（可能需移动字符）                   |
| clear()               | O(1)         | 仅重置大小（不保证释放内存）                                       |
|-----------------------+--------------+--------------------------------------------------------------------|
| 子串与查找            |              |                                                                    |
|-----------------------+--------------+--------------------------------------------------------------------|
| substr()              | O(k)         | k为子串长度（需拷贝）                                              |
| find() / rfind()      | O(n * m)     | n为原字符串长度，m为待查找子串长度（最坏情况，如朴素算法）         |
| find_first_of()       | O(n * m)     | n为原字符串长度，m为字符集长度                                     |
|-----------------------+--------------+--------------------------------------------------------------------|
| 容量管理              |              |                                                                    |
|-----------------------+--------------+--------------------------------------------------------------------|
| size() / length()     | O(1)         | 直接返回存储的长度                                                 |
| resize()              | O(n)         | n为目标大小（可能需要填充或截断）                                  |
| reserve()             | O(n)         | n为目标容量（可能触发内存分配）                                    |
| shrink_to_fit()       | O(n)         | n为当前字符串长度（可能触发内存重分配）                            |
|-----------------------+--------------+--------------------------------------------------------------------|
| 其他操作              |              |                                                                    |
|-----------------------+--------------+--------------------------------------------------------------------|
| compare()             | O(min(n, m)) | n和m为比较的两个字符串长度                                         |
| swap()                | O(1)         | 仅交换内部指针（不拷贝数据）                                       |
| to_string()           | O(log₁₀n)    | n为数值的位数（如整数转字符串）                                    |
| stoi() / stod()       | O(n)         | n为字符串长度（需逐字符解析）                                      |
