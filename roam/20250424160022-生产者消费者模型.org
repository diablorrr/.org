:PROPERTIES:
:ID:       68dca24e-d88a-41e5-a132-ac5e792a9424
:END:
#+title: 生产者消费者模型

* 使用
** cpp利用队列实现生产者消费者模型
- [[id:8ab4df56-e11f-42b8-87f8-4daa2fd045db][cpp]]实现方式 ::
  1. [[id:0d617742-3be0-46fc-8cfe-ef770ccbe589][std::queue]]作为缓冲区
  2. 利用条件变量([[id:f54fd0da-668f-4a8f-bbc7-47344ef25360][std::condition_variable]])实现生产者和消费者线程同步[fn:1]
  3. 生产者一般是一个或多个线程，消费者一般是多个线程([[id:5a7cdf28-08ef-4bb3-bfa9-3c7abaad09e2][线程池]])
- 好处 ::
  1. 解耦了生产者和消费者的逻辑
  2. 支持多线程并发操作
  3. 队列作为缓冲，平衡双方速率差异
  4. 队列先进先出特点，保证处理数据的顺序


* 概念
- 简介 ::
  1. 一种并发编程模型，用于解决多线程/进程间的同步问题
  2. 具体做法：某种容器作为缓冲区，生产者往缓冲区存数据，消费者从缓冲区取数据

* Footnotes

[fn:1] 生产者将数据放入队列中，然后通知消费者；消费者收到通知，取出数据处理
