:PROPERTIES:
:ID:       25084af5-0a12-471d-815e-c3a2e05ff8e0
:END:
#+title: FREEDOM

* 动机
** 先前工作的问题
- 传统方法 :: 常将低维多模态特征和item id的嵌入融合 => *无法捕获item-item潜在语义结构*
- LATTICE  :: 通过学习潜在item-item语义结构         => 效果不错， *效率低*
** 本文的解决方法
- FREEDOM ::
  + 效率 :: *冻结* item-item图, *去噪* user-item图进行
  + 捕获潜在语义结构 :: item-item图、user-item图中分别使用 *图卷积操作*




* 模型
** FREEDOM模型图 :ATTACH:
:PROPERTIES:
:ID:       f4e21ee5-c851-49a3-86fc-a14ea32edf87
:END:
[[attachment:_20250512_134120screenshot.png]]

** 构建冻结的item-item图
1. item多模态嵌入向量之间进行[[id:ad62acc0-f0cc-4b1f-802f-61b4b9cf5dd7][余弦相似度]]计算，构建item-item图
2. [[id:a85ff608-4da1-461b-b8b4-2ce3b4905b26][kNN]]算法进行稀疏化，只保留top-k相似边
3. 归一化item-item图后，自学习权重聚合多模态item-item图
4. 训练阶段，冻结权重[fn:2]
5. 将加权图转换为无权图[fn:1]

** 去噪user-item二分图
1. 边的采样概率：边所连两个节点的度数，度数越高的节点，它们之间所连边的采样概率低
2. 边的修剪与采样：(根据1)按一定比例修剪边
3. 每个训练周期，迭代地修剪user-item图的边，并对采样得到的邻接矩阵进行归一化

** 融合两张图进行学习
1. 在item-item图、user-item图中分别进行图卷积操作 => 信息传播与聚合
2. 将图卷积结果向量拼接传入损失函数；将原始多模态向量[fn:3]经过MLP处理后传入损失函数


* Footnotes
[fn:3] 为了足够充分的探索原始数据
[fn:2] 提高模型效率：模型训练过程中，图结构不再动态变化
[fn:1] 减少权重导致的运算，降低计算复杂度，只关注连接关系
