:PROPERTIES:
:ID:       12877083-bf01-4693-8458-5073fc0d266c
:END:
#+title: org-babel设置多代码块运行
#+filetags: org-babel

* org-babel设置多代码块运行
1. 在 headline 使用[fn:1]： =M-x org-babel-tangle=
2. 在第3个代码块（bash）： =C-c C-c=


* 示例
:PROPERTIES:
:VISIBILITY: show2levels
:END:
** 两数之和（单代码块）
#+BEGIN_SRC cpp :results output :includes '(<iostream> <vector>) :namespaces std
vector<int> twoSum(vector<int>& nums, int target) {
    int n = nums.size();
    for (int i = 0; i < n; ++i) {
        for (int j = i + 1; j < n; ++j) {
            if (nums[i] + nums[j] == target) {
                return {i, j};
            }
        }
    }
    return {};
}

int main() {
    vector<int> nums = {2, 7, 11, 15};
    int target = 9;
    vector<int> result = twoSum(nums, target);
    if (!result.empty()) {
        cout << "Index: " << result[0] << ", " << result[1] << endl;
    } else {
        cout << "No solution found!" << endl;
    }
    return 0;
}
#+END_SRC

#+RESULTS:
: Index: 0, 1

** 两数之和（多代码块 tangle）
#+begin_src C++ :tangle ../example/two_Sum.h :includes '(<iostream> <vector>) :main no
std::vector<int> twoSum(std::vector<int>& nums, int target);
#+end_src

#+BEGIN_SRC C++ :tangle ../example/two_sum.cpp :main no
#include <iostream>
#include <vector>

std::vector<int> twoSum(std::vector<int>& nums, int target) {
    int n = nums.size();
    for (int i = 0; i < n; ++i) {
        for (int j = i + 1; j < n; ++j) {
            if (nums[i] + nums[j] == target) {
                return {i, j};
            }
        }
    }
    return {};
}
#+END_SRC

#+BEGIN_SRC C++ :tangle ../example/main.cpp :includes "two_Sum.h"
int main() {
    std::vector<int> nums = {2, 7, 11, 15};
    int target = 9;
    std::vector<int> result = twoSum(nums, target);

    if (!result.empty()) {
        std::cout << "Index: " << result[0] << ", " << result[1] << std::endl;
    } else {
        std::cout << "No solution found!" << std::endl;
    }

    return 0;
}
#+end_src

#+begin_src bash :results output
g++ -o ../example/main ../example/main.cpp ../example/two_sum.cpp && ../example/main
#+end_src

#+RESULTS:
: Index: 0, 1


* Footnotes
[fn:1] 这样使得org-babel-tangle作用范围为子树而不是整个文件
