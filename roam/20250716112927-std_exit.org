:PROPERTIES:
:ID:       ebd68d1b-110b-40a5-9e3b-2687f3b9b17d
:END:
#+title: std::exit()
#+filetags: cpp

* std::exit() [[https://www.learncpp.com/cpp-tutorial/halts-exiting-your-program-early/][learncpp8.12]]
1. 用于 *正常终止程序* 的函数，不同于 [[id:bf65fb36-d17f-42ed-8435-88510d7a502b][std::abort()]] 的异常终止

2. *执行流程*
   1) 清理 [[id:853a3bee-b823-49fc-acd6-804eecb74822][静态生命周期]] 的变量（ *不会清理当前函数或调用栈中的局部变量* ）
   2) 调用 std::atexit() 注册的函数
   3) 一些清理操作（关闭标准流、刷新缓冲区确保内容写入文件）
   4) 返回状态码给操作系统
   #+begin_src cpp :results output :namespaces std :includes <iostream>
   #include <cstdlib> // for std::exit()

   void cleanup()
   {
       // code here to do any kind of cleanup required
       std::cout << "cleanup!\n";
   }

   int main()
   {
       // register cleanup() to be called automatically when std::exit() is called
       std::atexit(cleanup); // note: we use cleanup rather than cleanup() since we're not making a function call to cleanup() right now

       std::cout << 1 << '\n';

       std::exit(0); // terminate and return status code 0 to operating system

       // The following statements never execute
       std::cout << 2 << '\n';

       return 0;
   }
   #+end_src

3. main函数 返回时，会隐式调用 std::exit()，并将 [[id:f4a757af-96df-44bc-abef-4720a0c40275][main()]] 的返回值（状态码）作为参数
