:PROPERTIES:
:ID:       5138e082-8f2b-4001-ac6e-4d4f113a2dce
:END:
#+title: std::chrono
#+filetags: cpp

* std::chrono [[https://www.learncpp.com/cpp-tutorial/timing-your-code/][learncpp18.4]]
1. 封装一个测试时间的类，使用；一个完整的示例 [fn:1]
   #+begin_src cpp :results output :namespaces std :includes <iostream>
   #include <chrono> // for std::chrono functions

   // 封装
   class Timer
   {
   private:
     // Type aliases to make accessing nested type easier
     using Clock = std::chrono::steady_clock;
     using Second = std::chrono::duration<double, std::ratio<1> >;
     std::chrono::time_point<Clock> m_beg { Clock::now() };

   public:
     void reset()
     {
       m_beg = Clock::now();
     }
     double elapsed() const
     {
       return std::chrono::duration_cast<Second>(Clock::now() - m_beg).count();
     }
   };

   // 使用
   int main()
   {
       Timer t;
       // 这里放测试的代码
       std::cout << "Time elapsed: " << t.elapsed() << " seconds\n";
       return 0;
   }
   #+end_src

* Footnotes

[fn:1]
#+begin_src cpp :results output :namespaces std :includes <iostream>
#include <algorithm> // for std::sort
#include <array>
#include <chrono> // for std::chrono functions
#include <cstddef> // for std::size_t
#include <numeric> // for std::iota

const int g_arrayElements { 10000 };

class Timer
{
private:
    // Type aliases to make accessing nested type easier
    using Clock = std::chrono::steady_clock;
    using Second = std::chrono::duration<double, std::ratio<1> >;

    std::chrono::time_point<Clock> m_beg{ Clock::now() };

public:

    void reset()
    {
        m_beg = Clock::now();
    }

    double elapsed() const
    {
        return std::chrono::duration_cast<Second>(Clock::now() - m_beg).count();
    }
};

int main()
{
    std::array<int, g_arrayElements> array;
    std::iota(array.rbegin(), array.rend(), 1); // fill the array with values 10000 to 1

    Timer t;

    std::sort(array.begin(), array.end());

    std::cout << "Time taken: " << t.elapsed() << " seconds\n";
    return 0;
}
#+end_src

#+RESULTS:
: Time taken: 0.000476574 seconds
