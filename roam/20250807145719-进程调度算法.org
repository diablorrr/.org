:PROPERTIES:
:ID:       57a3e52f-e77e-439f-a4e5-3dc6e1886e5a
:END:
#+title: 进程调度算法
#+filetags: network

* 先来先服务
就绪队列 中选 *先来* 的；对短作业不友好（eg：短作业前有个长作业，则短作业等待时间很长）


* 最短作业优先
就绪队列 中选 *运行时间最短* 的；对长作业不友好（eg：一直有短作业来，长作业一直没被运行）


* 高响应比优先
就绪队列 中选 *高响应比* 的；兼顾了短作业、长作业
- 响应比优先公式 :: =(等待时间 + 运行时间) / 运行时间=
  1. 运行时间越短，响应比越高，兼顾 短作业
  2. 等待时间越长，响应比越高，兼顾 长作业


* 时间片轮转
就绪队列中 每个作业在 *固定时间片内运行* （若时间片结束前阻塞或结束，提前切换）；兼顾了短作业、长作业


* 最高优先级
就绪队列 中选 *优先级最高* 的，如果是 抢占式 直接选，非抢占式 等正在执行的作业结束
- 静态优先级 :: 创建进程时就确定
- 动态优先级 :: 动态调整进程优先级（eg：运行时间越长，优先级越低）


* 多级反馈队列
1. 多个就绪队列，优先级从高到低，时间片从短到长
2. 新进程在第一级队列末尾，先来先服务的方式运行一个时间片，没运行完，放入第二级队列末尾；高优先级队列为空，才运行下一级

** 图:多级反馈队列 :ATTACH:
:PROPERTIES:
:ID:       d3db7747-a50b-43ee-b9f3-fa0d4feba997
:END:
[[attachment:_20250807_152509screenshot.png]]
