:PROPERTIES:
:ID:       9c2a5102-40ec-47c9-ae2f-ea3b8c7b2df9
:END:
#+title: 虚拟内存
#+filetags: operating_system

* 虚拟内存 [[https://www.bilibili.com/video/BV1YE411D7nH?spm_id_from=333.788.videopod.sections&vd_source=4441bc96046659b39d059d583f36ff52&p=55][bilibili-王道]]
1. *为什么要有虚拟内存？* 本质原因在于 [[id:679da1a6-1914-4b9e-b693-137ddb6dc047][局部性原理]] -> 意味着程序要跑起来，不需要完整装入内存，只需要装所需的部分
   如果没有虚拟内存：
   1) （一次性）作业需要一次性 *全部装入* 内存后才能运行       -> 作业太大，无法运行（装不进内存）；作业太多，只能运行部分作业，并发度下降（内存中一部分作业在运行，另一部分没法运行）
   2) （驻留性）装入内存的作业在结束运行前会一直留在内存中   -> 浪费内存，并发度下降（一段时间内只需要访问作业的一部分数据就能正常运行）

2. 请求分页存储管理（对应 内存分配和回收） *需要实现的功能* ：
   1) [[id:37818a8d-725a-424d-8b37-9c491adc66ed][请求调页]]（外存 -> 内存）
   2) [[id:37818a8d-725a-424d-8b37-9c491adc66ed][页面置换]]（内存 -> 外存）
   请求分页存储管理 *分类*
   1) 请求分页存储管理
   2) 请求分段存储管理
   3) 请求段页式存储管理



* 局部性原理
:PROPERTIES:
:ID:       679da1a6-1914-4b9e-b693-137ddb6dc047
:END:
时间局部性：程序执行/访问某条指令/数据，则不久后会再次执行/访问
空间局部性：程序访问某个存储单元，不久后，附近存储单元很可能被访问（很多数据在内存中连续存储，很多指令也是在内存中顺序存放的）


* 图:请求调页流程 :ATTACH:
:PROPERTIES:
:ID:       37818a8d-725a-424d-8b37-9c491adc66ed
:END:
[[attachment:_20250809_195613screenshot.png]]
如果在 第4步 物理内存中找不到空闲页，则需要选择一个物理页换出到磁盘 -> [[id:c4463c71-680f-449b-8da5-5853633e3a18][内存置换算法]]


* 内存置换算法 [[https://www.bilibili.com/video/BV1YE411D7nH?spm_id_from=333.788.videopod.sections&vd_source=4441bc96046659b39d059d583f36ff52&p=57][bilibili-王道]]
:PROPERTIES:
:ID:       c4463c71-680f-449b-8da5-5853633e3a18
:END:
| 算法                  | 淘汰页面规则             | 优缺点                     |
|-----------------------+--------------------------+----------------------------|
| OPT（[[id:f480d6bf-da5d-4fd9-a433-f1c12a1c21cf][最佳页面]]）       | 未来最长时间不访问       | 性能最好；无法实现         |
| FIFO（[[id:fd6d25d6-e11e-4ddc-9210-da084b16046c][先进先出]]）      | 最先进入内存             | 实现简单；性能差           |
| LRU（[[id:030cfed8-79d0-43cd-9e4d-de5cedef7e63][最近最久未使用]]） | 最近一段时间内没访问过的 | 性能很好；硬件支持，开销大 |
| NRU（时钟页面）       |                          |                            |
| 改进型NRU             |                          |                            |


* 图:最佳页面置换算法 :ATTACH:
:PROPERTIES:
:ID:       f480d6bf-da5d-4fd9-a433-f1c12a1c21cf
:END:
[[attachment:_20250809_201423screenshot.png]]


* 图:先进先出页面置换算法 :ATTACH:
:PROPERTIES:
:ID:       fd6d25d6-e11e-4ddc-9210-da084b16046c
:END:
[[attachment:_20250809_201601screenshot.png]]


* 图:最近最久未使用页面置换算法 :ATTACH:
:PROPERTIES:
:ID:       030cfed8-79d0-43cd-9e4d-de5cedef7e63
:END:
[[attachment:_20250809_201809screenshot.png]]
